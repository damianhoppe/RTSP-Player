import java.text.SimpleDateFormat

apply plugin: 'com.android.application'

def appVersionCode = 14
def appSiteUrl = "https://github.com/Huczeq/RTSP-Player"
def urlAddModelForm = "https://docs.google.com/forms/d/e/1FAIpQLSdIlcGRIdQSlwCDhrjd2s62ZVPadYcQDpa2At543e9urx2VyQ/viewform?usp=sf_link"
def appVersionName = "1.6.4"
def buildTime(String format = "yyyy-MM-dd") {
    def df = new SimpleDateFormat(format)
    df.setTimeZone(TimeZone.getTimeZone("UTC"))
    return df.format(new Date())
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.0"
    android.ndkVersion "21.0.6113669"

    defaultConfig {
        applicationId "pl.huczeq.rtspplayer"
        minSdkVersion 23
        targetSdkVersion 30
        versionCode appVersionCode
        versionName "${appVersionName}"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            versionNameSuffix "-debug"
        }
    }

    splits {
        // Configures multiple APKs based on ABI.
        abi {
            // Enables building multiple APKs per ABI.
            enable true
            // By default all ABIs are included, so use reset() and include to specify that we only
            // want APKs for x86 and x86_64.
            // Resets the list of ABIs that Gradle should create APKs for to none.
            reset()
            // Specifies a list of ABIs that Gradle should create APKs for.
            include "x86", "x86_64", "armeabi-v7a", "arm64-v8a"
            // Specifies that we do not want to also generate a universal APK that includes all ABIs.
            universalApk true
        }
    }

    signingConfigs {
        buildTypes {
            debug {
                buildConfigField("String", "BUILD_TIME", "\"${buildTime("yyyy-MM-dd HH:mm:ss")}\"")
                buildConfigField("String", "SITE_URL", "\"${appSiteUrl}\"")
                buildConfigField("String", "URL_ADD_MODEL_FORM", "\"${urlAddModelForm}\"")
            }
            release {
                buildConfigField("String", "BUILD_TIME", "\"${buildTime("yyyy-MM-dd HH:mm:ss")}\"")
                buildConfigField("String", "SITE_URL", "\"${appSiteUrl}\"")
                buildConfigField("String", "URL_ADD_MODEL_FORM", "\"${urlAddModelForm}\"")
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.navigation:navigation-fragment:2.1.0'
    implementation 'androidx.navigation:navigation-ui:2.1.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'

    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation "androidx.preference:preference:1.1.1"
    implementation 'androidx.core:core:1.3.0'

    implementation 'org.videolan.android:libvlc-all:3.3.4'
    implementation 'com.github.Lucem-Anb:ZoomableVideo:1.0.0'
}